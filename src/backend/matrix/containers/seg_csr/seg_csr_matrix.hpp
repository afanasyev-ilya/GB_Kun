/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace lablas{
namespace backend{


template <typename T>
MatrixSegmentedCSR<T>::MatrixSegmentedCSR()
{
    num_segments = 1;
    size = 1;
    nnz = 1;
    merge_blocks_number = 1;
    load_balanced_threshold = 1;
    alloc(1, 1);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
MatrixSegmentedCSR<T>::~MatrixSegmentedCSR()
{
    free();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
void MatrixSegmentedCSR<T>::alloc(VNT _size, ENT _nnz)
{
    this->size = _size;
    this->nnz = _nnz;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
void MatrixSegmentedCSR<T>::free()
{
    delete []subgraphs;
}

}
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
