Script started on Sat 07 Aug 2021 10:10:40 PM CDT
groups: cannot find name for group ID 8047
Intel Suite:
Copyright (C) 2009-2019 Intel Corporation. All rights reserved.
Intel(R) VTune(TM) Amplifier 2019 (build 591499)
[1;34m==>[0m 71 installed packages
-- [0;35mlinux-ubuntu16.04-broadwell[0m / [0;32mgcc@5.4.0[0m ----------------------
autoconf[0;36m@2.69[0m                gettext[0;36m@0.20.2[0m        libsigsegv[0;36m@2.12[0m      perl[0;36m@5.30.2[0m
autoconf[0;36m@2.69[0m                gettext[0;36m@0.21[0m          libtool[0;36m@2.4.6[0m        perl[0;36m@5.32.1[0m
autoconf-archive[0;36m@2019.01.06[0m  git[0;36m@2.26.0[0m            libunistring[0;36m@0.9.10[0m  pkgconf[0;36m@1.6.3[0m
automake[0;36m@1.16.2[0m              git[0;36m@2.29.0[0m            libxml2[0;36m@2.9.10[0m       pkgconf[0;36m@1.7.3[0m
automake[0;36m@1.16.3[0m              gmp[0;36m@6.1.2[0m             libxml2[0;36m@2.9.10[0m       py-pip[0;36m@19.3[0m
berkeley-db[0;36m@18.1.40[0m          gmp[0;36m@6.2.1[0m             m4[0;36m@1.4.18[0m            py-setuptools[0;36m@46.1.3[0m
boost[0;36m@1.75.0[0m                 hwloc[0;36m@2.4.0[0m           mpc[0;36m@1.1.0[0m            python[0;36m@3.7.7[0m
bzip2[0;36m@1.0.8[0m                  isl[0;36m@0.18[0m              mpc[0;36m@1.1.0[0m            python[0;36m@3.8.0[0m
cmake[0;36m@3.19.5[0m                 isl[0;36m@0.20[0m              mpfr[0;36m@3.1.6[0m           readline[0;36m@8.0[0m
curl[0;36m@7.68.0[0m                  isl[0;36m@0.21[0m              mpfr[0;36m@4.0.2[0m           sqlite[0;36m@3.31.1[0m
curl[0;36m@7.74.0[0m                  libbsd[0;36m@0.10.0[0m         ncurses[0;36m@6.2[0m          tar[0;36m@1.32[0m
diffutils[0;36m@3.7[0m                libedit[0;36m@3.1-20191231[0m  numactl[0;36m@2.0.14[0m       util-macros[0;36m@1.19.1[0m
expat[0;36m@2.2.9[0m                  libevent[0;36m@2.1.12[0m       openmpi[0;36m@4.0.5[0m        valgrind[0;36m@3.16.1[0m
expat[0;36m@2.2.10[0m                 libffi[0;36m@3.3[0m            openssh[0;36m@8.4p1[0m        xz[0;36m@5.2.5[0m
gcc[0;36m@6.3.0[0m                    libiconv[0;36m@1.16[0m         openssl[0;36m@1.1.1g[0m       xz[0;36m@5.2.5[0m
gcc[0;36m@9.3.0[0m                    libidn2[0;36m@2.1.1a[0m        openssl[0;36m@1.1.1j[0m       zlib[0;36m@1.2.11[0m
gcc[0;36m@10.1.0[0m                   libidn2[0;36m@2.3.0[0m         pcre2[0;36m@10.31[0m          zstd[0;36m@1.4.4[0m
gdbm[0;36m@1.18.1[0m                  libpciaccess[0;36m@0.16[0m     pcre2[0;36m@10.35[0m
[0;36mhypersparse $[0m pwd
/home/faculty/davis/master/LAGraph/build
[0;36mhypersparse $[0m cd ../src/benchmark/
[0;36mhypersparse $[0m dir
total 2340
  8 bc_demo.c               224 o_gap_14May2021_backslash.txt
 12 bfs_demo.c              152 o_gap_14May2021.txt
  8 cc_demo.c               224 o_gap_15May2021_backslash_vanilla.txt
  4 CMakeLists.txt          176 o_gap_22June2021_hypersparse.txt
  4 [0m[01;31mdo_gap_all[0m*             212 o_gap_23June2021b.txt
  4 [01;31mdo_gap_bc[0m*               16 o_gap_24June2021a_hypersparse.txt
  4 [01;31mdo_gap_bfs[0m*             228 o_gap_24June2021_hypersparse.txt
  4 [01;31mdo_gap_binary[0m*          176 o_gap_25c_Jun_2021_hypersparse.txt
  4 [01;31mdo_gap_cc[0m*              196 o_gap_25d_Jun_2021_hypersparse.txt
  4 [01;31mdo_gap_pagerank[0m*        168 o_gap_25June2021a_hypersparse.txt
  4 [01;31mdo_gap_sssp[0m*            248 o_gap_25June2021b_hypersparse.txt
  4 [01;31mdo_gap_tc[0m*              156 o_gap_5Aug2021_hypersparse_with_check.txt
  4 GAP_2021_backslash.txt    8 README.md
 12 GAP_2021.txt              8 sssp_demo.c
  8 gappagerank_demo.c       12 tc_demo.c
 36 LAGraph_demo.h            8 typescript
  4 mtx2bin_demo.c
[0;36mhypersparse $[0m ./dor_[K[K_gap_tc grb
 
======================================================================
GAP benchmarks using LAGraph+GraphBLAS: Triangle Counting
======================================================================
Matrix input file format:  grb
GAP matrices located in:   ../../../GAP
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: ../../../GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: ../../../GAP/GAP-kron/GAP-kron.grb
read time: 34.6722
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
  pattern symmetry: symmetric  self-edges: 0
  adjacency matrix: GrB_BOOL matrix: 134217726-by-134217726 entries: 4223264644
    (1, 83111928)   1
    (2, 113772338)   1
    (9, 26920261)   1
    (9, 33335674)   1
    (9, 90905511)   1
    (9, 92964069)   1
    (9, 126874301)   1
    (11, 3075467)   1
    (11, 11283179)   1
    (11, 14136330)   1
    (11, 18241662)   1
    (11, 21256905)   1
    (11, 26197037)   1
    (11, 34992956)   1
    (11, 49762924)   1
    (11, 54231301)   1
    (11, 55275316)   1
    (11, 55896288)   1
    (11, 56613538)   1
    (11, 69378808)   1
    (11, 76391974)   1
    (11, 77970070)   1
    (11, 80121717)   1
    (11, 113872174)   1
    (11, 115829864)   1
    (11, 125066355)   1
    (11, 129708509)   1
    (11, 131285585)   1
    (11, 132549336)   1
    (14, 11049596)   1
    ...
# of triangles: 106873365648 slow time: 5655.17 sec

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 106873365648
SandiaDot2: sum ((U*L') .* U)    sort: descending degree
nthreads:  40 time:  1044.958178 rate:   4.04 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
kron fails on method 3; skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
kron fails on method 4; skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:   932.156209 sec rate   4.53  # triangles: 106873365648
trial  1:   932.488575 sec rate   4.53  # triangles: 106873365648
trial  2:   931.608621 sec rate   4.53  # triangles: 106873365648
nthreads:  40 time:   932.084468 rate:   4.53   # of triangles: 106873365648 presort: 1
Avg: TC method5.2  40:    932.084 sec: ../../../GAP/GAP-kron/GAP-kron.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:   932.084468 rate:   4.53
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: ../../../GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: ../../../GAP/GAP-urand/GAP-urand.grb
read time: 62.9307
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
  pattern symmetry: symmetric  self-edges: 0
  adjacency matrix: GrB_BOOL matrix: 134217728-by-134217728 entries: 4294966740
    (0, 8291853)   1
    (0, 9845139)   1
    (0, 14571172)   1
    (0, 16459757)   1
    (0, 27302127)   1
    (0, 27726180)   1
    (0, 30303523)   1
    (0, 32640525)   1
    (0, 33360373)   1
    (0, 40782998)   1
    (0, 41057943)   1
    (0, 43348321)   1
    (0, 50206206)   1
    (0, 52510658)   1
    (0, 53390371)   1
    (0, 53579654)   1
    (0, 54622695)   1
    (0, 57696071)   1
    (0, 59385788)   1
    (0, 60365539)   1
    (0, 64764501)   1
    (0, 64889445)   1
    (0, 72706136)   1
    (0, 77394182)   1
    (0, 82101150)   1
    (0, 86364056)   1
    (0, 86790574)   1
    (0, 90287459)   1
    (0, 104674459)   1
    (0, 109716228)   1
    ...
# of triangles: 5378 slow time: 41.7261 sec

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 5378
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:    35.186206 rate: 122.06 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
trial  0:    28.048582 sec rate 153.13  # triangles: 5378
trial  1:    27.835253 sec rate 154.30  # triangles: 5378
trial  2:    28.246597 sec rate 152.05  # triangles: 5378
nthreads:  40 time:    28.043477 rate: 153.15   # of triangles: 5378 presort: 0
Avg: TC method3.2  40:     28.043 sec: ../../../GAP/GAP-urand/GAP-urand.grb

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
trial  0:    27.701928 sec rate 155.04  # triangles: 5378
trial  1:    27.496925 sec rate 156.20  # triangles: 5378
trial  2:    27.339485 sec rate 157.10  # triangles: 5378
nthreads:  40 time:    27.512779 rate: 156.11   # of triangles: 5378 presort: 0
Avg: TC method4.2  40:     27.513 sec: ../../../GAP/GAP-urand/GAP-urand.grb

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:    34.127816 sec rate 125.85  # triangles: 5378
trial  1:    34.143175 sec rate 125.79  # triangles: 5378
trial  2:    34.115636 sec rate 125.89  # triangles: 5378
nthreads:  40 time:    34.128876 rate: 125.85   # of triangles: 5378 presort: 0
Avg: TC method5.2  40:     34.129 sec: ../../../GAP/GAP-urand/GAP-urand.grb

Best method: Sandia2:    sum ((U*U) .* U)     auto-sort
nthreads:  40 time:    27.512779 rate: 156.11
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: ../../../GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: ../../../GAP/GAP-twitter/GAP-twitter.grb
read time: 38.6914
Graph: kind: undirected, nodes: 61578415 entries: 2405026092 type: bool
  pattern symmetry: symmetric  self-edges: 0
  adjacency matrix: GrB_BOOL matrix: 61578415-by-61578415 entries: 2405026092
    (12, 13)   1
    (12, 14)   1
    (12, 15)   1
    (12, 16)   1
    (12, 17)   1
    (12, 18)   1
    (12, 20)   1
    (12, 21)   1
    (12, 22)   1
    (12, 23)   1
    (12, 24)   1
    (12, 31)   1
    (12, 38)   1
    (12, 41)   1
    (12, 47)   1
    (12, 52)   1
    (12, 53)   1
    (12, 56)   1
    (12, 57)   1
    (12, 58)   1
    (12, 59)   1
    (12, 60)   1
    (12, 61)   1
    (12, 62)   1
    (12, 64)   1
    (12, 67)   1
    (12, 69)   1
    (12, 70)   1
    (12, 76)   1
    (12, 87)   1
    ...
# of triangles: 34824916864 slow time: 28292.4 sec

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 34824916864
SandiaDot2: sum ((U*L') .* U)    sort: descending degree
nthreads:  40 time:   248.628156 rate:   9.67 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:   236.230117 sec rate  10.18  # triangles: 34824916864
trial  1:   235.750833 sec rate  10.20  # triangles: 34824916864
trial  2:   236.713280 sec rate  10.16  # triangles: 34824916864
nthreads:  40 time:   236.231410 rate:  10.18   # of triangles: 34824916864 presort: 1
Avg: TC method5.2  40:    236.231 sec: ../../../GAP/GAP-twitter/GAP-twitter.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:   236.231410 rate:  10.18
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: ../../../GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: ../../../GAP/GAP-web/GAP-web.grb
read time: 38.7227
Graph: kind: undirected, nodes: 50636151 entries: 3620126660 type: bool
  pattern symmetry: symmetric  self-edges: 0
  adjacency matrix: GrB_BOOL matrix: 50636151-by-50636151 entries: 3620126660
    (0, 50395004)   1
    (1, 50395004)   1
    (2, 50395004)   1
    (3, 50395004)   1
    (4, 50395004)   1
    (5, 50395004)   1
    (6, 50395004)   1
    (7, 50395004)   1
    (8, 50395004)   1
    (9, 50395004)   1
    (10, 11)   1
    (10, 49817219)   1
    (10, 49824797)   1
    (10, 49824842)   1
    (10, 49824843)   1
    (10, 49824846)   1
    (10, 49826026)   1
    (10, 49826027)   1
    (10, 49826709)   1
    (10, 49826710)   1
    (10, 49826711)   1
    (10, 49826712)   1
    (10, 49826713)   1
    (10, 49826714)   1
    (10, 49826715)   1
    (10, 49826716)   1
    (10, 49826717)   1
    (10, 49826719)   1
    (10, 49827761)   1
    (10, 49853332)   1
    ...
# of triangles: 84907041475 slow time: 19745.4 sec

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 84907041475
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:    38.095153 rate:  95.03 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:    34.609560 sec rate 104.60  # triangles: 84907041475
trial  1:    34.635703 sec rate 104.52  # triangles: 84907041475
trial  2:    34.672085 sec rate 104.41  # triangles: 84907041475
nthreads:  40 time:    34.639116 rate: 104.51   # of triangles: 84907041475 presort: 0
Avg: TC method5.2  40:     34.639 sec: ../../../GAP/GAP-web/GAP-web.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:    34.639116 rate: 104.51
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: ../../../GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: ../../../GAP/GAP-road/GAP-road.grb
read time: 1.42998
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
  pattern symmetry: symmetric  self-edges: 0
  adjacency matrix: GrB_BOOL matrix: 23947347-by-23947347 entries: 57708624
    (0, 1)   1
    (0, 709)   1
    (0, 1049673)   1
    (1, 0)   1
    (1, 2097154)   1
    (2, 9)   1
    (2, 2097152)   1
    (2, 2097156)   1
    (3, 1903)   1
    (3, 1048578)   1
    (4, 5)   1
    (4, 2097153)   1
    (5, 4)   1
    (5, 11)   1
    (5, 1048579)   1
    (6, 7)   1
    (6, 1048580)   1
    (6, 1048582)   1
    (7, 6)   1
    (8, 33976)   1
    (8, 1048581)   1
    (9, 2)   1
    (9, 10)   1
    (9, 2097155)   1
    (10, 9)   1
    (10, 11)   1
    (10, 2097152)   1
    (11, 5)   1
    (11, 10)   1
    (11, 2097155)   1
    ...
# of triangles: 438804 slow time: 0.0543712 sec

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 438804
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:     0.233396 rate: 247.26 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:     0.201612 sec rate 286.24  # triangles: 438804
trial  1:     0.195509 sec rate 295.17  # triangles: 438804
trial  2:     0.193944 sec rate 297.55  # triangles: 438804
nthreads:  40 time:     0.197022 rate: 292.90   # of triangles: 438804 presort: 0
Avg: TC method5.2  40:      0.197 sec: ../../../GAP/GAP-road/GAP-road.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:     0.197022 rate: 292.90
[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m exit
exit

Script done on Sun 08 Aug 2021 06:05:29 PM CDT
